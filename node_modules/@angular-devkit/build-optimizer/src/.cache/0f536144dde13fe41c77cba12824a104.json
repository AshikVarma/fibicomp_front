{"remainingRequest":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\ng-pick-datetime\\date-time\\date-time.class.js","dependencies":[{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\ng-pick-datetime\\date-time\\date-time.class.js","mtime":1518478499000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { Inject, Input, Optional } from '@angular/core';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nvar nextUniqueId = 0;\nvar OwlDateTime = /*@__PURE__*/ (function () {\n    function OwlDateTime(dateTimeAdapter, dateTimeFormats) {\n        var _this = this;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this.startView = 'month';\n        this.stepHour = 1;\n        this.stepMinute = 1;\n        this.stepSecond = 1;\n        this._firstDayOfWeek = 0;\n        this.dateTimeChecker = function (dateTime) {\n            return !!dateTime &&\n                (!_this.dateTimeFilter || _this.dateTimeFilter(dateTime)) &&\n                (!_this.minDateTime || _this.dateTimeAdapter.compare(dateTime, _this.minDateTime) >= 0) &&\n                (!_this.maxDateTime || _this.dateTimeAdapter.compare(dateTime, _this.maxDateTime) <= 0);\n        };\n        if (!this.dateTimeAdapter) {\n            throw Error(\"OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following \" +\n                \"modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a \" +\n                \"custom implementation.\");\n        }\n        if (!this.dateTimeFormats) {\n            throw Error(\"OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following \" +\n                \"modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a \" +\n                \"custom implementation.\");\n        }\n        this._id = \"owl-dt-picker-\" + nextUniqueId++;\n    }\n    Object.defineProperty(OwlDateTime.prototype, \"firstDayOfWeek\", {\n        get: function () {\n            return this._firstDayOfWeek;\n        },\n        set: function (value) {\n            if (value > 6 || value < 0) {\n                this._firstDayOfWeek = 0;\n            }\n            else {\n                this._firstDayOfWeek = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"formatString\", {\n        get: function () {\n            return this.pickerType === 'both' ? this.dateTimeFormats.fullPickerInput :\n                this.pickerType === 'calendar' ? this.dateTimeFormats.datePickerInput :\n                    this.dateTimeFormats.timePickerInput;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"disabled\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OwlDateTime.prototype.getValidDate = function (obj) {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    };\n    return OwlDateTime;\n}());\nexport { OwlDateTime };\n",null]}