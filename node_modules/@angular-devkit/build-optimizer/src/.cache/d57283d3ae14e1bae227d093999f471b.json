{"remainingRequest":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\ng-pick-datetime\\date-time\\calendar.component.js","dependencies":[{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\ng-pick-datetime\\date-time\\calendar.component.js","mtime":1518478499000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Inject, Input, NgZone, Optional, Output } from '@angular/core';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { take } from 'rxjs/operators';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nvar OwlCalendarComponent = /*@__PURE__*/ (function () {\n    function OwlCalendarComponent(elmRef, pickerIntl, ngZone, dateTimeAdapter, dateTimeFormats) {\n        var _this = this;\n        this.elmRef = elmRef;\n        this.pickerIntl = pickerIntl;\n        this.ngZone = ngZone;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this.firstDayOfWeek = 0;\n        this._selecteds = [];\n        this.startView = 'month';\n        this.pickerMomentChange = new EventEmitter();\n        this.selectedChange = new EventEmitter();\n        this.userSelection = new EventEmitter();\n        this._isMonthView = true;\n        this.dateFilterForViews = function (date) {\n            return !!date &&\n                (!_this.dateFilter || _this.dateFilter(date)) &&\n                (!_this.minDate || _this.dateTimeAdapter.compare(date, _this.minDate) >= 0) &&\n                (!_this.maxDate || _this.dateTimeAdapter.compare(date, _this.maxDate) <= 0);\n        };\n    }\n    Object.defineProperty(OwlCalendarComponent.prototype, \"minDate\", {\n        get: function () {\n            return this._minDate;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            value = this.getValidDate(value);\n            this._minDate = value ?\n                this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(value), this.dateTimeAdapter.getMonth(value), this.dateTimeAdapter.getDate(value)) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"maxDate\", {\n        get: function () {\n            return this._maxDate;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            value = this.getValidDate(value);\n            this._maxDate = value ?\n                this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(value), this.dateTimeAdapter.getMonth(value), this.dateTimeAdapter.getDate(value)) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"pickerMoment\", {\n        get: function () {\n            return this._pickerMoment;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._selected = this.getValidDate(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"selecteds\", {\n        get: function () {\n            return this._selecteds;\n        },\n        set: function (values) {\n            var _this = this;\n            this._selecteds = values.map(function (v) {\n                v = _this.dateTimeAdapter.deserialize(v);\n                return _this.getValidDate(v);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"periodButtonText\", {\n        get: function () {\n            return this._isMonthView ? this.dateTimeAdapter.format(this.pickerMoment, this.dateTimeFormats.monthYearLabel) :\n                this.dateTimeAdapter.getYearName(this.pickerMoment);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"periodButtonLabel\", {\n        get: function () {\n            return this._isMonthView ? this.pickerIntl.switchToYearViewLabel :\n                this.pickerIntl.switchToMonthViewLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"prevButtonLabel\", {\n        get: function () {\n            return this._isMonthView ? this.pickerIntl.prevMonthLabel :\n                this.pickerIntl.prevYearLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"nextButtonLabel\", {\n        get: function () {\n            return this._isMonthView ? this.pickerIntl.nextMonthLabel :\n                this.pickerIntl.nextYearLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"isMonthView\", {\n        get: function () {\n            return this._isMonthView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlCalendarComponent.prototype, \"owlDTCalendarClass\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OwlCalendarComponent.prototype.ngOnInit = function () {\n    };\n    OwlCalendarComponent.prototype.ngAfterContentInit = function () {\n        this._isMonthView = this.startView !== 'year';\n    };\n    OwlCalendarComponent.prototype.toggleClicked = function () {\n        this._isMonthView = !this._isMonthView;\n        this.focusActiveCell();\n    };\n    OwlCalendarComponent.prototype.previousClicked = function () {\n        this.pickerMoment = this.isMonthView ?\n            this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1) :\n            this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1);\n        this.pickerMomentChange.emit(this.pickerMoment);\n    };\n    OwlCalendarComponent.prototype.nextClicked = function () {\n        this.pickerMoment = this.isMonthView ?\n            this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1) :\n            this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1);\n        this.pickerMomentChange.emit(this.pickerMoment);\n    };\n    OwlCalendarComponent.prototype.dateSelected = function (date) {\n        if ((this.selectMode === 'single' && !this.dateTimeAdapter.isSameDay(date, this.selected)) ||\n            this.selectMode === 'range') {\n            this.selectedChange.emit(date);\n        }\n    };\n    OwlCalendarComponent.prototype.monthSelected = function (month) {\n        this.pickerMoment = this.dateTimeAdapter.clampDate(month, this.minDate, this.maxDate);\n        this.pickerMomentChange.emit(this.pickerMoment);\n        this._isMonthView = true;\n    };\n    OwlCalendarComponent.prototype.userSelected = function () {\n        this.userSelection.emit();\n    };\n    OwlCalendarComponent.prototype.prevButtonEnabled = function () {\n        return !this.minDate || !this.isSameView(this.pickerMoment, this.minDate);\n    };\n    OwlCalendarComponent.prototype.nextButtonEnabled = function () {\n        return !this.maxDate || !this.isSameView(this.pickerMoment, this.maxDate);\n    };\n    OwlCalendarComponent.prototype.focusActiveCell = function () {\n        var _this = this;\n        this.ngZone.runOutsideAngular(function () {\n            _this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n                _this.elmRef.nativeElement.querySelector('.owl-dt-calendar-cell-active').focus();\n            });\n        });\n    };\n    OwlCalendarComponent.prototype.handleCalendarKeydown = function (event) {\n        if (this.isMonthView) {\n            this.handleCalendarKeydownInMonthView(event);\n        }\n        else {\n            this.handleCalendarKeydownInYearView(event);\n        }\n    };\n    OwlCalendarComponent.prototype.handleCalendarKeydownInMonthView = function (event) {\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case RIGHT_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case UP_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -7);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case DOWN_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 7);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case HOME:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1 - this.dateTimeAdapter.getDate(this.pickerMoment));\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case END:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\n                    this.dateTimeAdapter.getDate(this.pickerMoment));\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case PAGE_UP:\n                this.pickerMoment = event.altKey ?\n                    this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1) :\n                    this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case PAGE_DOWN:\n                this.pickerMoment = event.altKey ?\n                    this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1) :\n                    this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case ENTER:\n                if (this.dateFilterForViews(this.pickerMoment)) {\n                    this.dateSelected(this.pickerMoment);\n                    event.preventDefault();\n                }\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    };\n    OwlCalendarComponent.prototype.handleCalendarKeydownInYearView = function (event) {\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case RIGHT_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case UP_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -3);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case DOWN_ARROW:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 3);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case HOME:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case END:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 11 - this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case PAGE_UP:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 : -1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case PAGE_DOWN:\n                this.pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 : 1);\n                this.pickerMomentChange.emit(this.pickerMoment);\n                break;\n            case ENTER:\n                this.monthSelected(this.pickerMoment);\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    };\n    OwlCalendarComponent.prototype.isSameView = function (date1, date2) {\n        return this.isMonthView ?\n            !!(date1 && date2 &&\n                this.dateTimeAdapter.getYear(date1) === this.dateTimeAdapter.getYear(date2) &&\n                this.dateTimeAdapter.getMonth(date1) === this.dateTimeAdapter.getMonth(date2)) :\n            !!(date1 && date2 &&\n                this.dateTimeAdapter.getYear(date1) === this.dateTimeAdapter.getYear(date2));\n    };\n    OwlCalendarComponent.prototype.getValidDate = function (obj) {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    };\n    return OwlCalendarComponent;\n}());\nexport { OwlCalendarComponent };\n",null]}