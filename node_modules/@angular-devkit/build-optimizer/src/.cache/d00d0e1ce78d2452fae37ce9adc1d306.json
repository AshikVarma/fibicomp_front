{"remainingRequest":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@ng-idle\\core\\src\\interruptsource.js","dependencies":[{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@ng-idle\\core\\src\\interruptsource.js","mtime":1518154215980},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { EventEmitter } from '@angular/core';\r\n/*\r\n * A base for classes that act as a source for interrupts.\r\n */\r\nvar InterruptSource = /*@__PURE__*/ (function () {\r\n    function InterruptSource(attachFn, detachFn) {\r\n        this.attachFn = attachFn;\r\n        this.detachFn = detachFn;\r\n        this.isAttached = false;\r\n        this.onInterrupt = new EventEmitter();\r\n    }\r\n    /*\r\n     * Attaches to the specified events on the specified source.\r\n     */\r\n    InterruptSource.prototype.attach = function () {\r\n        if (!this.isAttached && this.attachFn) {\r\n            this.attachFn(this);\r\n        }\r\n        this.isAttached = true;\r\n    };\r\n    /*\r\n     * Detaches from the specified events on the specified source.\r\n     */\r\n    InterruptSource.prototype.detach = function () {\r\n        if (this.isAttached && this.detachFn) {\r\n            this.detachFn(this);\r\n        }\r\n        this.isAttached = false;\r\n    };\r\n    return InterruptSource;\r\n}());\r\nexport { InterruptSource };\r\n//# sourceMappingURL=interruptsource.js.map \r\n",null]}