{"remainingRequest":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@ng-idle\\core\\src\\documentinterruptsource.js","dependencies":[{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@ng-idle\\core\\src\\documentinterruptsource.js","mtime":1518154215831},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { EventTargetInterruptSource } from './eventtargetinterruptsource';\r\n/*\r\n * An interrupt source that uses events on the document element (html tag).\r\n */\r\nvar DocumentInterruptSource = /*@__PURE__*/ (function (_super) {\r\n    __extends(DocumentInterruptSource, _super);\r\n    function DocumentInterruptSource(events, throttleDelay) {\r\n        if (throttleDelay === void 0) {\r\n            throttleDelay = 500;\r\n        }\r\n        return _super.call(this, document.documentElement, events, throttleDelay) || this;\r\n    }\r\n    /*\r\n     * Checks to see if the event should be filtered.\r\n     * @param event - The original event object.\r\n     * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\r\n     */\r\n    DocumentInterruptSource.prototype.filterEvent = function (event) {\r\n        // some browser bad input hacks\r\n        if (event.type === 'mousemove'\r\n            && ((event.originalEvent && event.originalEvent.movementX === 0 &&\r\n                event.originalEvent.movementY === 0)\r\n                || (event.movementX !== void 0 && !event.movementX || !event.movementY))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return DocumentInterruptSource;\r\n}(EventTargetInterruptSource));\r\nexport { DocumentInterruptSource };\r\n//# sourceMappingURL=documentinterruptsource.js.map \r\n",null]}