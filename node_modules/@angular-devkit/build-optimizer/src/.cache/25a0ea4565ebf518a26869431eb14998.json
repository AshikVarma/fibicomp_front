{"remainingRequest":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\ng-pick-datetime\\date-time\\calendar-body.component.js","dependencies":[{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\ng-pick-datetime\\date-time\\calendar-body.component.js","mtime":1518478499000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nvar CalendarCell = /*@__PURE__*/ (function () {\n    function CalendarCell(value, displayValue, ariaLabel, enabled, out) {\n        if (out === void 0) {\n            out = false;\n        }\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.out = out;\n    }\n    return CalendarCell;\n}());\nexport { CalendarCell };\nvar OwlCalendarBodyComponent = /*@__PURE__*/ (function () {\n    function OwlCalendarBodyComponent() {\n        this.activeCell = 0;\n        this.allowDisabledCellSelection = false;\n        this.numCols = 7;\n        this.cellRatio = 1;\n        this.selectedValueChange = new EventEmitter();\n    }\n    Object.defineProperty(OwlCalendarBodyComponent.prototype, \"owlDTCalendarBodyClass\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OwlCalendarBodyComponent.prototype.ngOnInit = function () {\n    };\n    OwlCalendarBodyComponent.prototype.cellClicked = function (cell) {\n        if (!this.allowDisabledCellSelection && !cell.enabled) {\n            return;\n        }\n        this.selectedValueChange.emit(cell.value);\n    };\n    OwlCalendarBodyComponent.prototype.isActiveCell = function (rowIndex, colIndex) {\n        var cellNumber = rowIndex * this.numCols + colIndex;\n        return cellNumber === this.activeCell;\n    };\n    OwlCalendarBodyComponent.prototype.isSelected = function (value) {\n        if (!this.selectedValues || this.selectedValues.length === 0) {\n            return false;\n        }\n        if (this.selectMode === 'single') {\n            return value === this.selectedValues[0];\n        }\n        if (this.selectMode === 'range') {\n            var fromValue = this.selectedValues[0];\n            var toValue = this.selectedValues[1];\n            return value === fromValue || value === toValue;\n        }\n    };\n    OwlCalendarBodyComponent.prototype.isInRange = function (value) {\n        if (this.selectMode === 'range') {\n            var fromValue = this.selectedValues[0];\n            var toValue = this.selectedValues[1];\n            if (fromValue !== null && toValue !== null) {\n                return value >= fromValue && value <= toValue;\n            }\n            else {\n                return value === fromValue || value === toValue;\n            }\n        }\n    };\n    OwlCalendarBodyComponent.prototype.isRangeFrom = function (value) {\n        if (this.selectMode === 'range') {\n            var fromValue = this.selectedValues[0];\n            return fromValue !== null && value === fromValue;\n        }\n    };\n    OwlCalendarBodyComponent.prototype.isRangeTo = function (value) {\n        if (this.selectMode === 'range') {\n            var toValue = this.selectedValues[1];\n            return toValue !== null && value === toValue;\n        }\n    };\n    return OwlCalendarBodyComponent;\n}());\nexport { OwlCalendarBodyComponent };\n",null]}