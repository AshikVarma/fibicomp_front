{"remainingRequest":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\elasticsearch\\src\\lib\\connectors\\jquery.js","dependencies":[{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\elasticsearch\\src\\lib\\connectors\\jquery.js","mtime":1518154263613},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\fibicomp-frontend\\fibicomp_front\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["/* global jQuery: false */\n\n/**\n * Simple connection class for using the XHR object in browsers\n *\n * @class {XhrConnection}\n */\nmodule.exports = JqueryConnector;\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\n\nfunction JqueryConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n}\n_.inherits(JqueryConnector, ConnectionAbstract);\n\nJqueryConnector.prototype.request = function (params, cb) {\n  var ajax = {\n    url: this.host.makeUrl(params),\n    data: params.body,\n    type: params.method,\n    dataType: 'text',\n    headers: this.host.getHeaders(params.headers),\n    done: cb\n  };\n\n  var jqXHR = jQuery.ajax(ajax)\n    .done(function (data) {\n      cb(null, data, jqXHR.statusCode(), {\n        'content-type': jqXHR.getResponseHeader('content-type')\n      });\n    })\n    .fail(function (a, b, err) {\n      cb(new ConnectionFault(err && err.message));\n    });\n\n  return function () {\n    jqXHR.abort();\n  };\n};\n",null]}